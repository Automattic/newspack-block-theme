@use '../sass-utils';

.wp-block-navigation {
	// Give dropdowns a rounded border, a drop-shadow, and increase the top padding.
	.wp-block-navigation__submenu-container {
		border-radius: var(--wp--custom--border--radius-x-small);
		box-shadow: 0 1px 2px rgba(black, 0.05);
		overflow: hidden;
		padding: var(--wp--preset--spacing--20) 0;
	}

	@include sass-utils.media(medium) {
		// Adjust the vertical placement of the dropdowns to account for the extra padding.
		.has-child .wp-block-navigation__submenu-container .wp-block-navigation__submenu-container {
			top: calc(-0.5em - 1px);
		}
	}

	// Increase minimum dropdown width.
	.has-child
		.wp-block-navigation-submenu__toggle[aria-expanded='true']
		~ .wp-block-navigation__submenu-container,
	.has-child:not(.open-on-click):hover > .wp-block-navigation__submenu-container {
		min-width: 240px;
	}

	// Don't add the box shadow/padding when using the default mobile view of the navigation block.
	.wp-block-navigation__responsive-container.has-modal-open {
		.wp-block-navigation__submenu-container {
			box-shadow: none;
			padding-bottom: 0;
		}
	}

	// Change the block spacing when vertical.
	&.is-vertical {
		gap: var(--wp--preset--spacing--40);

		&.has-background {
			gap: var(--wp--preset--spacing--30);
		}
	}

	&.is-style-flatten {
		// TODO: restrict this just to the vertical block variation.
		// In the meantime, we'll use CSS so the styles are only applied there.
		// See: https://github.com/WordPress/gutenberg/issues/40621.
		&.is-vertical {
			.wp-block-navigation-item {
				flex-wrap: wrap;
			}

			.wp-block-navigation__submenu-icon {
				display: none;
			}

			.wp-block-navigation__submenu-container {
				overflow: visible;
			}

			&:not( .has-background ) .wp-block-navigation__submenu-container {
				background: transparent;
			}

			&:not( .has-text-color ) .wp-block-navigation__submenu-container {
				color: inherit;
			}

			.has-child {
				gap: var( --wp--preset--spacing--30 );

				.wp-block-navigation__submenu-container {
					border: 0;
					border-radius: 0;
					box-shadow: none;
					gap: inherit;
					height: unset;
					padding: 0 0 0 var( --wp--preset--spacing--30 );
					position: static;
					opacity: unset;
					visibility: unset;
				}

				.wp-block-navigation__submenu-container,
				.wp-block-navigation-submenu__toggle[aria-expanded='true']
					~ .wp-block-navigation__submenu-container,
				&:not( .open-on-click ):hover > .wp-block-navigation__submenu-container {
					width: 100%;
				}

				&.has-child-selected > .wp-block-navigation__submenu-container,
				&.is-selected > .wp-block-navigation__submenu-container {
					width: 100% !important;
				}
			}

			&.has-background .has-child {
				gap: var( --wp--preset--spacing--20 );
			}
		}
	}

	&.primary-navigation {
		row-gap: var( --wp--preset--spacing--20 );
		.wp-block-page-list > li {
			min-height: 36px;
		}
	}

	a {
		text-decoration-color: transparent;
		text-decoration-thickness: 0.125em !important;
		text-underline-offset: 0.375em;
		transition: text-decoration-color 125ms ease-in-out;
		transition-delay: 100ms;

		&:not( .wp-element-button ):hover {
			text-decoration: underline;
			text-decoration-color: currentcolor;
		}

		&:not( .wp-element-button ):focus-visible {
			outline: 2px solid;
			outline-offset: 1px;
		}

	}
}
